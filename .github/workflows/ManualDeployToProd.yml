name: ManualDeployToProd
on:
  workflow_dispatch:

jobs:
  BuildAndDeployToProdInRelease:
    if: ${{ startsWith(github.ref_name, 'release/') }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # 실제로 서버 배포하는 Action 추가
      # 슬랙 배포 알람 Action 추가

      - name: 버전 정보 추출
        run: |
          echo "::set-output name=version::$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\+[0-9]{6}')"
        id: extract_version_name

      - if: ${{ steps.extract_branch_name.outputs.version != '' }}
        name: Print Tag
        run: |
          echo ${{ steps.extract_version_name.outputs.version }}

      - if: ${{ steps.extract_version_name.outputs.version != '' }}
        name: Set Git config
        run: |
            git config --local user.email "actions@github.com"
            git config --local user.name "Github Actions"

      - if: ${{ steps.extract_version_name.outputs.version != '' }}
        name: Merge to main
        run: |
            git fetch --unshallow
            git checkout main
            git pull
            git merge --no-ff ${{ github.ref_name }} -m "Auto-merge from ${{ github.ref_name }} to master"
            git push
            git tag ${{ steps.extract_version_name.outputs.version }}
            git push origin ${{ steps.extract_version_name.outputs.version }}

      - if: ${{ steps.extract_version_name.outputs.version != '' }}
        name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.extract_version_name.outputs.version }}
          release_name: ${{ steps.extract_version_name.outputs.version }}

      - if: ${{ steps.extract_version_name.outputs.version != '' }}
        name: Delete branch
        uses: dawidd6/action-delete-branch@v3
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branches: ${{ github.ref_name }}

  BuildAndDeployToProdInHotfix:
    if: ${{ startsWith(github.ref_name, 'hotfix/') }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # 실제로 서버 배포하는 Action 추가
      # 슬랙 배포 알람 Action 추가

      - name: 버전 정보 추출
        run: |
          echo "::set-output name=version::$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')+hotfix.$(echo '${{ github.ref_name }}' | egrep -o '[0-9]{6}')"
        id: extract_version_name

      - if: ${{ steps.extract_version_name.outputs.version != '' }}
        name: Print Tag
        run: |
          echo ${{ steps.extract_version_name.outputs.version }}

      - if: ${{ steps.extract_version_name.outputs.version != '' }}
        name: Set Git config
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "Github Actions"

      - if: ${{ steps.extract_version_name.outputs.version != '' }}
        name: Merge to main
        run: |
          git fetch --unshallow
          git checkout main
          git pull
          git merge --no-ff ${{ github.ref_name }} -m "Auto-merge from ${{ github.ref_name }} to master"
          git push
          git tag ${{ steps.extract_version_name.outputs.version }}
          git push origin ${{ steps.extract_version_name.outputs.version }}

      - if: ${{ steps.extract_version_name.outputs.version != '' }}
        name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.extract_version_name.outputs.version }}
          release_name: ${{ steps.extract_version_name.outputs.version }}

      - if: ${{ steps.extract_version_name.outputs.version != '' }}
        name: Delete branch
        uses: dawidd6/action-delete-branch@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branches: ${{ github.ref_name }}
